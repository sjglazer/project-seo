//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SEOCrawler.SEOService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeywordList", Namespace="http://schemas.datacontract.org/2004/07/SEOServices")]
    [System.SerializableAttribute()]
    public partial class KeywordList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] keywordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] keywords {
            get {
                return this.keywordsField;
            }
            set {
                if ((object.ReferenceEquals(this.keywordsField, value) != true)) {
                    this.keywordsField = value;
                    this.RaisePropertyChanged("keywords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeywordStats", Namespace="http://schemas.datacontract.org/2004/07/SEOServices")]
    [System.SerializableAttribute()]
    public partial class KeywordStats : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SEOCrawler.SEOService.KeywordStat[] statsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SEOCrawler.SEOService.KeywordStat[] stats {
            get {
                return this.statsField;
            }
            set {
                if ((object.ReferenceEquals(this.statsField, value) != true)) {
                    this.statsField = value;
                    this.RaisePropertyChanged("stats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeywordStat", Namespace="http://schemas.datacontract.org/2004/07/SEOServices")]
    [System.SerializableAttribute()]
    public partial class KeywordStat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string keywordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string positionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string keyword {
            get {
                return this.keywordField;
            }
            set {
                if ((object.ReferenceEquals(this.keywordField, value) != true)) {
                    this.keywordField = value;
                    this.RaisePropertyChanged("keyword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string position {
            get {
                return this.positionField;
            }
            set {
                if ((object.ReferenceEquals(this.positionField, value) != true)) {
                    this.positionField = value;
                    this.RaisePropertyChanged("position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/SEOServices")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int keywordlLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int urlLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SEOCrawler.SEOService.UrlKeywordSet[] urllKeywordSetsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int keywordlLimit {
            get {
                return this.keywordlLimitField;
            }
            set {
                if ((this.keywordlLimitField.Equals(value) != true)) {
                    this.keywordlLimitField = value;
                    this.RaisePropertyChanged("keywordlLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int urlLimit {
            get {
                return this.urlLimitField;
            }
            set {
                if ((this.urlLimitField.Equals(value) != true)) {
                    this.urlLimitField = value;
                    this.RaisePropertyChanged("urlLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SEOCrawler.SEOService.UrlKeywordSet[] urllKeywordSets {
            get {
                return this.urllKeywordSetsField;
            }
            set {
                if ((object.ReferenceEquals(this.urllKeywordSetsField, value) != true)) {
                    this.urllKeywordSetsField = value;
                    this.RaisePropertyChanged("urllKeywordSets");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UrlKeywordSet", Namespace="http://schemas.datacontract.org/2004/07/SEOServices")]
    [System.SerializableAttribute()]
    public partial class UrlKeywordSet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] keywordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string urlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] keywords {
            get {
                return this.keywordsField;
            }
            set {
                if ((object.ReferenceEquals(this.keywordsField, value) != true)) {
                    this.keywordsField = value;
                    this.RaisePropertyChanged("keywords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string url {
            get {
                return this.urlField;
            }
            set {
                if ((object.ReferenceEquals(this.urlField, value) != true)) {
                    this.urlField = value;
                    this.RaisePropertyChanged("url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebsiteInfo", Namespace="http://schemas.datacontract.org/2004/07/SEOServices")]
    [System.SerializableAttribute()]
    public partial class WebsiteInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] keywordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string urlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] keywords {
            get {
                return this.keywordsField;
            }
            set {
                if ((object.ReferenceEquals(this.keywordsField, value) != true)) {
                    this.keywordsField = value;
                    this.RaisePropertyChanged("keywords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string url {
            get {
                return this.urlField;
            }
            set {
                if ((object.ReferenceEquals(this.urlField, value) != true)) {
                    this.urlField = value;
                    this.RaisePropertyChanged("url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SEOService.IKeywordService")]
    public interface IKeywordService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKeywordService/GetKeywordResults", ReplyAction="http://tempuri.org/IKeywordService/GetKeywordResultsResponse")]
        string[] GetKeywordResults(string lang, int num, string searchTerm, int start, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKeywordService/GetKeywordResults", ReplyAction="http://tempuri.org/IKeywordService/GetKeywordResultsResponse")]
        System.Threading.Tasks.Task<string[]> GetKeywordResultsAsync(string lang, int num, string searchTerm, int start, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKeywordService/GetAllKeywords", ReplyAction="http://tempuri.org/IKeywordService/GetAllKeywordsResponse")]
        SEOCrawler.SEOService.KeywordList GetAllKeywords();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKeywordService/GetAllKeywords", ReplyAction="http://tempuri.org/IKeywordService/GetAllKeywordsResponse")]
        System.Threading.Tasks.Task<SEOCrawler.SEOService.KeywordList> GetAllKeywordsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKeywordService/CrawlKeyword", ReplyAction="http://tempuri.org/IKeywordService/CrawlKeywordResponse")]
        bool CrawlKeyword(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKeywordService/CrawlKeyword", ReplyAction="http://tempuri.org/IKeywordService/CrawlKeywordResponse")]
        System.Threading.Tasks.Task<bool> CrawlKeywordAsync(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKeywordService/GetKeywordStats", ReplyAction="http://tempuri.org/IKeywordService/GetKeywordStatsResponse")]
        System.Collections.Generic.Dictionary<string, SEOCrawler.SEOService.KeywordStats> GetKeywordStats(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKeywordService/GetKeywordStats", ReplyAction="http://tempuri.org/IKeywordService/GetKeywordStatsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, SEOCrawler.SEOService.KeywordStats>> GetKeywordStatsAsync(string userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IKeywordServiceChannel : SEOCrawler.SEOService.IKeywordService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KeywordServiceClient : System.ServiceModel.ClientBase<SEOCrawler.SEOService.IKeywordService>, SEOCrawler.SEOService.IKeywordService {
        
        public KeywordServiceClient() {
        }
        
        public KeywordServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public KeywordServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KeywordServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KeywordServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetKeywordResults(string lang, int num, string searchTerm, int start, string country) {
            return base.Channel.GetKeywordResults(lang, num, searchTerm, start, country);
        }
        
        public System.Threading.Tasks.Task<string[]> GetKeywordResultsAsync(string lang, int num, string searchTerm, int start, string country) {
            return base.Channel.GetKeywordResultsAsync(lang, num, searchTerm, start, country);
        }
        
        public SEOCrawler.SEOService.KeywordList GetAllKeywords() {
            return base.Channel.GetAllKeywords();
        }
        
        public System.Threading.Tasks.Task<SEOCrawler.SEOService.KeywordList> GetAllKeywordsAsync() {
            return base.Channel.GetAllKeywordsAsync();
        }
        
        public bool CrawlKeyword(string keyword) {
            return base.Channel.CrawlKeyword(keyword);
        }
        
        public System.Threading.Tasks.Task<bool> CrawlKeywordAsync(string keyword) {
            return base.Channel.CrawlKeywordAsync(keyword);
        }
        
        public System.Collections.Generic.Dictionary<string, SEOCrawler.SEOService.KeywordStats> GetKeywordStats(string userId) {
            return base.Channel.GetKeywordStats(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, SEOCrawler.SEOService.KeywordStats>> GetKeywordStatsAsync(string userId) {
            return base.Channel.GetKeywordStatsAsync(userId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SEOService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUser", ReplyAction="http://tempuri.org/IUserService/AddUserResponse")]
        bool AddUser(SEOCrawler.SEOService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUser", ReplyAction="http://tempuri.org/IUserService/AddUserResponse")]
        System.Threading.Tasks.Task<bool> AddUserAsync(SEOCrawler.SEOService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        bool UpdateUser(SEOCrawler.SEOService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserAsync(SEOCrawler.SEOService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUser", ReplyAction="http://tempuri.org/IUserService/GetUserResponse")]
        SEOCrawler.SEOService.User GetUser(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUser", ReplyAction="http://tempuri.org/IUserService/GetUserResponse")]
        System.Threading.Tasks.Task<SEOCrawler.SEOService.User> GetUserAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetWebsiteInfo", ReplyAction="http://tempuri.org/IUserService/GetWebsiteInfoResponse")]
        SEOCrawler.SEOService.WebsiteInfo GetWebsiteInfo(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetWebsiteInfo", ReplyAction="http://tempuri.org/IUserService/GetWebsiteInfoResponse")]
        System.Threading.Tasks.Task<SEOCrawler.SEOService.WebsiteInfo> GetWebsiteInfoAsync(string userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : SEOCrawler.SEOService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<SEOCrawler.SEOService.IUserService>, SEOCrawler.SEOService.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddUser(SEOCrawler.SEOService.User user) {
            return base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> AddUserAsync(SEOCrawler.SEOService.User user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public bool UpdateUser(SEOCrawler.SEOService.User user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserAsync(SEOCrawler.SEOService.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public SEOCrawler.SEOService.User GetUser(string id) {
            return base.Channel.GetUser(id);
        }
        
        public System.Threading.Tasks.Task<SEOCrawler.SEOService.User> GetUserAsync(string id) {
            return base.Channel.GetUserAsync(id);
        }
        
        public SEOCrawler.SEOService.WebsiteInfo GetWebsiteInfo(string userId) {
            return base.Channel.GetWebsiteInfo(userId);
        }
        
        public System.Threading.Tasks.Task<SEOCrawler.SEOService.WebsiteInfo> GetWebsiteInfoAsync(string userId) {
            return base.Channel.GetWebsiteInfoAsync(userId);
        }
    }
}
